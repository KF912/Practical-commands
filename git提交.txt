Git 创建仓库
创建一个git仓库有如下几种方式：
git init：初始化一个git仓库
git clone：clone一个git仓库

重中之重——先拉代码
每次提交代码之前，养成良好的习惯，先 pull 一下代码。不 pull 代码万一导致代码冲突了就不美了
命令： git pull

接下来，就是正常流程了，现在的代码编辑器，例如：Visual studio code等，对 git 的支持已经很好了，我们只需要用鼠标 点点点 就能把代码提交上去。

中间插一句：要会使用git status

第一步：把更改的代码暂存起来
# 此命令会把所有更改的文件全部暂存起来。
git add . 
# 如果要单个来，只需要 . 替换成对应的文件名即可。
git add temp.txt

如何取消暂存的更改呢？
答案：git reset HEAD <file>...
说人话：请使用 git status 看看。

第二步：把暂存的改动提交到本地的版本库
# -m 参数表示可以直接输入后面的 message，简要说明这次改动。
git commit -m "xxx"
每次 git commit之后，都会在本地版本库中生成一个 哈希值，就是 commit-id,这个 id 在进行版本回退的时候有大用。

保不齐有人对暂存区这个东西感觉很多余，那么还可以在commit 之后加一个-a参数。
加的 -a 参数可以将所有已跟踪文件中的执行修改或删除操作的文件都提交到本地仓库，即使它们没有经过git add添加到暂存区。
例如：git commit -a -m "xxx"

第三步：将本地的分支版本上传到远程并合并
# git push 的命令格式一般是
git push <远程主机名> <本地分支名>：<远程分支名>
例如：git push origin master:master
当然，一般情况下，我们都不用写后面的，直接 git push 即可。

小技巧：
对于一个新建的存储库来说，我们第一次提交代码，可以按照githup上的提示一步步提交代码，这样虽然也还好，但是有个更简便的方法：
直接 git clone xxx 这个新存储库，此时我们会得一个以存储库名字命令的，带着一个名称为 git文件夹的非空文件夹。
把 git文件夹拷贝到我们的项目根目录下。
然后按照上面的流程走一遍即可。